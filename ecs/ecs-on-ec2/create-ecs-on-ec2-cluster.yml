AWSTemplateFormatVersion: "2010-09-09"
Description:
  "Create an ECS cluster and the resources needed to run it.
  Specifically, ECS cluster, AutoScaling, Launchtemplate, and an IAM role."

Parameters:
  ClusterName:
    Type: "String"
    Description: "Enter the name of the ECS Cluster."
    Default: "sample-ecs-cluster"
  InstanceType:
    Type: "String"
    Description: "Allowed EC2 instance type."
    AllowedValues: [t2.nano, t2.micro, t2.small, t2.medium, t2.large, t2.xlarge, t2.2xlarge,
      t3.nano, t3.micro, t3.small, t3.medium, t3.large, t3.xlarge, t3.2xlarge,
      m4.large, m4.xlarge, m4.2xlarge, m4.4xlarge,
      m5.large, m5.xlarge, m5.2xlarge, m5.4xlarge,
      c3.large, c3.xlarge, c3.2xlarge, c3.4xlarge,
      c4.large, c4.xlarge, c4.2xlarge, c4.4xlarge,
      c5.large, c5.xlarge, c5.2xlarge, c5.4xlarge]
  ECSSubnetIDs:
    Type: "List<AWS::EC2::Subnet::Id>"
    Description: "Specify one or more availabilityzones in which to run host instances of ECS."
  KeyName:
    Type: "AWS::EC2::KeyPair::KeyName"
    Description: "Select at your EC2 KeyPair."
  ImageId:
    Type: "String"
    Description: "Specify the ECS-optimized AMI host instance."
    Default: "ami-0f4146903324aaa5b"
  ECSSecurityGroups:
    Type: "List<AWS::EC2::SecurityGroup::Id>"
    Description: "Select the security group to be used for the host instance of ECS."
  ScalingDesiredCapacity:
    Type: "Number"
    Description: "Desired number of host instances for ECS clusters."
    Default: "1"
  ScalingMaxSize:
    Type: "Number"
    Description: "Maximum number of host instances for ECS clusters."
    Default: "3"
  ScalingMinSize:
    Type: "Number"
    Description: "Minimum number of host instances for ECS clusters."
    Default: "1"

Resources:
  # ECSクラスターの作成
  EcsCluster:
    Type: "AWS::ECS::Cluster"
    Properties: 
      ClusterName: !Ref "ClusterName"
      # ContainerInsightsを利用する設定。追加料金が発生するが細かなメトリクスを確認できる。
      ClusterSettings: 
        - Name: "containerInsights"
          # 詳細な監視が必要な場合はenabledにしておく
          Value: "disabled"
      Tags: 
        - Key: "Name"
          Value: !Ref "ClusterName"

  # AutoScalingグループの作成
  AutoScaling:
    Type: "AWS::AutoScaling::AutoScalingGroup"
    # インスタンス更新時のアップデート設定
    UpdatePolicy:
      # ローリングアップデートの設定
      AutoScalingRollingUpdate:
        # 1台ずつ変更
        MaxBatchSize: "1"
        # アップデート中に最低でも1台はインスタンスが起動するようにする
        MinInstancesInService: "1"
    Properties: 
      AutoScalingGroupName: !Sub "${ClusterName}-asg"
      # 次のスケーリングアクションまでの待機時間
      Cooldown: "300"
      # 実行するインスタンスの希望数
      DesiredCapacity: !Ref "ScalingDesiredCapacity"
      # インスタンスの最大数
      MaxSize: !Ref "ScalingMaxSize"
      # インスタンスの最小数
      MinSize: !Ref "ScalingMinSize"
      # インスタンスの起動設定
      LaunchConfigurationName: !Ref "LaunchConfiguration"
      # インスタンスを停止する時のルール
      TerminationPolicies: 
        - "OldestInstance"
      VPCZoneIdentifier: !Ref "ECSSubnetIDs"
      Tags: 
        - Key: "Name"
          Value: !Sub "${ClusterName}-ecs-instance"
          PropagateAtLaunch: "true"

  # AutoScaling起動設定の作成
  LaunchConfiguration:
    Type: "AWS::AutoScaling::LaunchConfiguration"
    Properties: 
      # 自動にパブリックIPを割り当てるかどうか
      AssociatePublicIpAddress: true
      BlockDeviceMappings: 
        - DeviceName: "/dev/xvda"
          Ebs: 
            VolumeType: "gp3"
            VolumeSize: "30"
      # EBSをスループット最適化モードにするか
      EbsOptimized: "false"
      # ECSにアタッチするインスタンスプロファイル
      IamInstanceProfile: !Ref "EcsInstanceProfile"
      # 実行するAMI
      ImageId: !Ref "ImageId"
      # 詳細メトリクスを有効にするか
      InstanceMonitoring: "false"
      # インスタンスタイプ
      InstanceType: !Ref "InstanceType"
      # EC2インスタンスのキーペア
      KeyName: !Ref "KeyName"
      # EC2に紐づけるセキュリティグループ
      SecurityGroups: !Ref "ECSSecurityGroups"
      # ECSクラスターに紐づけるためのユーザーデータ
      UserData: 
        Fn::Base64: !Sub |
          #!/bin/bash
          echo "ECS_CLUSTER=${ClusterName}" >> /etc/ecs/ecs.config

  # ECSで利用するためのポリシーを作成
  EcsInstanceRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Sub "${ClusterName}-instance-role"
      # ECSの基本的なポリシーとSSMを利用するためのポリシーをアタッチ
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role"
        - "arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "ec2.amazonaws.com"
            Action:
              - "sts:AssumeRole"

  # インスタンスプロファイルの作成
  EcsInstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Path: "/"
      Roles:
        - !Ref "EcsInstanceRole"
      InstanceProfileName: !Sub "${ClusterName}-instance-role"
